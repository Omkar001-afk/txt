{"version":3,"sources":["component/Nav/NavBar.jsx","component/Text/Text.jsx","component/Alert/Alert.jsx","component/About/About.jsx","component/img/photo-1495001258031-d1b407bc1776.jpg","component/HomePage/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","to","onClick","toggleMode","htmlFor","Text","useState","text","setText","space","setSpace","style","color","rows","backgroundColor","placeholder","onChange","event","target","value","capText","toUpperCase","showalt","lowTxt","toLowerCase","spa","split","length","Alert","alert","role","msg","About","aria-labelledby","data-bs-parent","HomePage","src","img","alt","App","setmode","setalt","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9edc57c0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Nav = (props) => {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/txt\">\r\n                TextUtiles\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className={`form-check-label text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\r\nconst Text = (props) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [space, setSpace] = useState(\"\");\r\n\r\n  const ChangeHandler = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const CapsHandler = () => {\r\n    let capText = text.toUpperCase();\r\n    setText(capText);\r\n    props.showalt(\"Coverted to UpperCase\", \"success\");\r\n  };\r\n\r\n  const LowerHandler = () => {\r\n    let lowTxt = text.toLowerCase();\r\n    setText(lowTxt);\r\n    props.showalt(\"Coverted to LowerCase\", \"success\");\r\n  };\r\n  const spaceHandler = () => {\r\n    let spa = text.split(\" \").length - 1;\r\n    setSpace(spa);\r\n    props.showalt(\"Space Counted\", \"success\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n    >\r\n      <h1>{props.title}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"10\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n          }}\r\n          placeholder=\"Enter here\"\r\n          onChange={ChangeHandler}\r\n        ></textarea>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary mx-1\"\r\n        onClick={CapsHandler}\r\n      >\r\n        Convert to UpperCase\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary mx-1\"\r\n        onClick={LowerHandler}\r\n      >\r\n        Convert to LowerCase\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary mx-1\"\r\n        onClick={spaceHandler}\r\n      >\r\n        Check no of Spaces\r\n      </button>\r\n      <div className=\"container my-2\">\r\n        <h2>Text Summary</h2>\r\n        <p>\r\n          {text.length} no of character, {text.split(\" \").length - 1} no of\r\n          words, no of sentense: {text.split(\".\").length - 1}\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>no of Spaces are: {space}</p>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Text;\r\n","import React from \"react\";\r\n\r\nconst Alert = (props) => {\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type}  alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>About Us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","export default __webpack_public_path__ + \"static/media/photo-1495001258031-d1b407bc1776.1f46a5d3.jpg\";","import React from \"react\";\r\nimport img from \"../img/photo-1495001258031-d1b407bc1776.jpg\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Welcome to TextUtils</h1>\r\n      <img src={img} alt=\"TextUtils\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Nav from \"./component/Nav/NavBar\";\nimport Text from \"./component/Text/Text.jsx\";\nimport Alert from \"./component/Alert/Alert\";\nimport About from \"./component/About/About\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport HomePage from \"./component/HomePage/HomePage\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalt] = useState(null);\n  const showalt = (msg, type) => {\n    setalt({\n      msg: msg,\n      type: type,\n    });\n    setTimeout(() => {\n      setalt(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      showalt(\"Dark mode activated\", \"success\");\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showalt(\"light mode activated\", \"success\");\n    }\n  };\n  return (\n    <Router>\n      {\" \"}\n      <div>\n        <Nav title=\"MyText\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/txt\">\n              <Text title=\"Convert your Text\" mode={mode} showalt={showalt} />\n            </Route>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}